package com.polaris.main.camera;

import org.joml.Vector3f;

import com.polaris.main.utils.Utils;

public class Camera {
	
	private Vector3f position, rotation;
	
	public Camera() { 
		position = new Vector3f(0,0,0);
		rotation = new Vector3f(0,0,0);
	}
	
	public Camera(Vector3f position) { 
		this.position = position;
		rotation = new Vector3f(0,0,0);
	}
	
	public Camera(Vector3f position, Vector3f rotation) {
		this.position = position;
		this.rotation = rotation;
	}
	
	public void translate(float x, float y, float z) {
		if (z != 0) {
			position.x += (float) Math.sin(Math.toRadians(rotation.y)) * -1.0f * z;
			position.z += (float) Math.cos(Math.toRadians(rotation.y)) * z; 
		}
		if (x != 0) {
			position.x += (float) Math.sin(Math.toRadians(rotation.y - 90)) * -1.0f * x;
			position.z += (float) Math.cos(Math.toRadians(rotation.y - 90)) * x; 
		}
		
		position.y += y;
	}
	
	public void setPosition(float x, float y, float z) {
		this.position.x = x;
		this.position.y = y;
		this.position.z = z;
	}
	
	public void setPosition(final Vector3f position) {
		this.position.x = position.x;
		this.position.y = position.y;
		this.position.z = position.z;
	}
	
	public void setRotation(float x, float y, float z) {
		this.rotation.x = x;
		this.rotation.y = y;
		this.rotation.z = z;
	}
	
	public void rotate(float x, float y, float z) {
		this.rotation.x += x;
		this.rotation.y += y;
		this.rotation.z += z;
	}

	public Vector3f getPosition() {
		return position;
	}

	public Vector3f getRotation() {
		return rotation;
	}

}
